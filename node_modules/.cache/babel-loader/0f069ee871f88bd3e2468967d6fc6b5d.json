{"ast":null,"code":"import { ADD, UPDATE, SUBTRACT } from \"../constants\";\nlet id_increment = 1;\nconst initialstate = {\n  taskList: []\n};\n\nconst TaskReducer = (state = initialstate, action) => {\n  switch (action.type) {\n    case ADD:\n      state = {\n        taskList: [...state.taskList, {\n          task: '',\n          id: id_increment\n        }]\n      };\n      id_increment = id_increment + 1;\n      return state;\n\n    case SUBTRACT: // let tgIndex = state.taskList.findIndex(element => state.id === element.id);\n    // state = {tsList: [\n    //   ...tsList.slice(0,tgIndex),\n    //   ...tsList.slice(tgIndex+1, tsList.length)\n    // ]}\n    // return state;\n    // case UPDATE:\n    //   const toUpdate = action.taskList\n    //   const task = action.task\n    //   let targetIndex = toUpdate.findIndex(element => action.taskId === element.id);\n    //   state = {toUpdate: [\n    //     ...toUpdate.slice(0,targetIndex),\n    //     {id:action.taskId, task},\n    //     ...toUpdate.slice(targetIndex+1, toUpdate.length)\n    //   ]}\n    //   return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default TaskReducer;","map":{"version":3,"sources":["/home/user/public_html/todoRedux/src/reducers/taskReducer.js"],"names":["ADD","UPDATE","SUBTRACT","id_increment","initialstate","taskList","TaskReducer","state","action","type","task","id"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,cAAtC;AACA,IAAIC,YAAY,GAAC,CAAjB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAGA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACH,YAAP,EAAqBI,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,GAAL;AACEO,MAAAA,KAAK,GAAG;AACNF,QAAAA,QAAQ,EAAE,CACR,GAAGE,KAAK,CAACF,QADD,EAER;AAACK,UAAAA,IAAI,EAAE,EAAP;AAAWC,UAAAA,EAAE,EAAER;AAAf,SAFQ;AADJ,OAAR;AAMAA,MAAAA,YAAY,GAACA,YAAY,GAAC,CAA1B;AACA,aAAOI,KAAP;;AAGF,SAAKL,QAAL,CAZF,CAaI;AACA;AACA;AACA;AACA;AAEA;AAGF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACE,aAAOK,KAAP;AApCJ;AAsCD,CAvCH;;AAwCE,eAAeD,WAAf","sourcesContent":["import { ADD, UPDATE, SUBTRACT } from \"../constants\";\nlet id_increment=1;\n\nconst initialstate = {\n  taskList: []\n}\nconst TaskReducer = (state=initialstate, action) => {\n    switch (action.type) {\n      case ADD:\n        state = {\n          taskList: [\n            ...state.taskList,\n            {task: '', id: id_increment}\n          ],\n        };\n        id_increment=id_increment+1;\n        return state;\n\n\n      case SUBTRACT:\n        // let tgIndex = state.taskList.findIndex(element => state.id === element.id);\n        // state = {tsList: [\n        //   ...tsList.slice(0,tgIndex),\n        //   ...tsList.slice(tgIndex+1, tsList.length)\n        // ]}\n\n        // return state;\n\n\n      // case UPDATE:\n      //   const toUpdate = action.taskList\n      //   const task = action.task\n      //   let targetIndex = toUpdate.findIndex(element => action.taskId === element.id);\n\n      //   state = {toUpdate: [\n      //     ...toUpdate.slice(0,targetIndex),\n      //     {id:action.taskId, task},\n      //     ...toUpdate.slice(targetIndex+1, toUpdate.length)\n      //   ]}\n      //   return state;\n\n\n      default:\n        return state;\n    }\n  };\n  export default TaskReducer;"]},"metadata":{},"sourceType":"module"}