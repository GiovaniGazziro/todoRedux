{"ast":null,"code":"var _jsxFileName = \"/home/user/public_html/todoRedux/src/components/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeTask } from '../actions/taskActions';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n    padding: 10\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  iconSmall: {\n    fontSize: 20\n  }\n});\n\nfunction ButtonTools(props) {\n  const classes = props.classes,\n        taskId = props.taskId,\n        onClick = props.onClick;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Delete\", React.createElement(DeleteIcon, {\n    className: classes.rightIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nButtonTools.propTypes = {\n  classes: PropTypes.object.isRequired,\n  taskId: PropTypes.number\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeTask: taskId => {\n      dispatch(removeTask(taskId));\n    }\n  };\n};\n\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(ButtonTools));","map":{"version":3,"sources":["/home/user/public_html/todoRedux/src/components/Button.js"],"names":["React","PropTypes","connect","Button","withStyles","DeleteIcon","removeTask","styles","theme","button","margin","spacing","unit","padding","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","ButtonTools","props","classes","taskId","onClick","propTypes","object","isRequired","number","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAGA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AAEvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcC,IADhB;AAENC,IAAAA,OAAO,EAAE;AAFH,GAFe;AAMvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAEP,KAAK,CAACG,OAAN,CAAcC;AADnB,GANa;AASvBI,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAET,KAAK,CAACG,OAAN,CAAcC;AADjB,GATY;AAYvBM,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE;AADD;AAZY,CAAL,CAApB;;AAiBA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,QAClBC,OADkB,GACYD,KADZ,CAClBC,OADkB;AAAA,QACRC,MADQ,GACYF,KADZ,CACRE,MADQ;AAAA,QACAC,OADA,GACYH,KADZ,CACAG,OADA;AAE1B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,EAAEF,OAAO,CAACb,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAGE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEa,OAAO,CAACN,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD;;AAEDI,WAAW,CAACK,SAAZ,GAAwB;AACtBH,EAAAA,OAAO,EAAErB,SAAS,CAACyB,MAAV,CAAiBC,UADJ;AAEtBJ,EAAAA,MAAM,EAAEtB,SAAS,CAAC2B;AAFI,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACHxB,IAAAA,UAAU,EAAGiB,MAAD,IAAY;AACpBO,MAAAA,QAAQ,CAACxB,UAAU,CAACiB,MAAD,CAAX,CAAR;AACH;AAHE,GAAP;AAKD,CAND;;AAQA,eAAenB,UAAU,CAACG,MAAD,CAAV,CAAmBL,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCT,WAAlC,CAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeTask } from '../actions/taskActions';\n\n\nconst styles = theme => ({\n\n  button: {\n    margin: theme.spacing.unit,\n    padding: 10,\n  },\n  leftIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n});\n\nfunction ButtonTools(props) {\n  const { classes,  taskId, onClick } = props;\n  return (\n    <div>\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={event => onClick(taskId)} className={classes.button}> */}\n      <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n\n        Delete\n        <DeleteIcon className={classes.rightIcon} />\n      </Button>\n    </div>\n  );\n}\n\nButtonTools.propTypes = {\n  classes: PropTypes.object.isRequired,\n  taskId: PropTypes.number\n\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      removeTask: (taskId) => {\n          dispatch(removeTask(taskId));\n      }\n  };\n};\n\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(ButtonTools));\n"]},"metadata":{},"sourceType":"module"}