{"ast":null,"code":"var _jsxFileName = \"/home/user/public_html/todoRedux/src/App.js\";\nimport React, { Component } from 'react';\nimport OutlinedTextFields from './components/TextField';\nimport ButtonTools from './components/Button';\nimport ButtonAdd from './components/ButtonAdd';\nlet id_increment = 0;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskList: []\n    };\n\n    this.populateList = () => {\n      const taskList = this.state.taskList;\n      this.setState({\n        taskList: [...taskList, {\n          task: '',\n          id: id_increment\n        }]\n      });\n      id_increment = id_increment + 1;\n    };\n\n    this.removeList = taskId => {\n      const taskList = this.state.taskList;\n      let targetIndex = taskList.findIndex(element => taskId === element.id);\n      this.setState({\n        taskList: [...taskList.slice(0, targetIndex), ...taskList.slice(targetIndex + 1, taskList.length)]\n      });\n    };\n\n    this.updateList = (task, taskId) => {\n      const taskList = this.state.taskList;\n      let targetIndex = taskList.findIndex(element => taskId === element.id);\n      this.setState({\n        taskList: [...taskList.slice(0, targetIndex), {\n          id: taskId,\n          task\n        }, ...taskList.slice(targetIndex + 1, taskList.length)]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Task Manager\"), React.createElement(ButtonAdd, {\n      addTask: this.populateList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.state.taskList.map(elem => React.createElement(\"div\", {\n      className: \"task\",\n      key: elem.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(OutlinedTextFields, {\n      task: elem.task,\n      taskId: elem.id,\n      onChange: this.updateList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(ButtonTools, {\n      taskId: elem.id,\n      onClick: this.removeList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/public_html/todoRedux/src/App.js"],"names":["React","Component","OutlinedTextFields","ButtonTools","ButtonAdd","id_increment","App","state","taskList","populateList","setState","task","id","removeList","taskId","targetIndex","findIndex","element","slice","length","updateList","render","map","elem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport OutlinedTextFields from './components/TextField';\nimport ButtonTools from './components/Button';\nimport ButtonAdd from './components/ButtonAdd';\n\nlet id_increment=0;\n\nclass App extends Component {\n\n  state = {taskList: []}\n\n  populateList = () => {\n    const  { taskList } = this.state\n    this.setState({\n      taskList: [\n        ...taskList,\n        {task: '', id: id_increment}\n      ],\n    });\n  id_increment=id_increment+1;\n\n  }\n\n  removeList = (taskId) => {\n    const  { taskList } = this.state\n    let targetIndex = taskList.findIndex(element => taskId === element.id);\n    this.setState({\n      taskList: [\n        ...taskList.slice(0,targetIndex),\n        ...taskList.slice(targetIndex+1, taskList.length)\n      ]\n    })\n  };\n\n  updateList = (task, taskId) => {\n    const  { taskList } = this.state\n    let targetIndex = taskList.findIndex(element => taskId === element.id);\n    this.setState({\n      taskList: [\n        ...taskList.slice(0,targetIndex),\n        {id:taskId, task},\n        ...taskList.slice(targetIndex+1, taskList.length)\n      ]\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Task Manager</h1>\n        <ButtonAdd addTask={this.populateList}/>\n\n        { this.state.taskList.map(elem => (\n          <div className=\"task\" key={elem.id}>\n              <OutlinedTextFields task={elem.task} taskId={elem.id} onChange={this.updateList} />\n              <ButtonTools taskId={elem.id} onClick={this.removeList}/>\n\n          </div>\n        )) }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}